from aiogram import Router, types, F
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.utils.keyboard import InlineKeyboardBuilder

from handlers.google_sheet_writer import save_full_booking  # –∏–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ —Ç–∞–±–ª–∏—Ü—É

router = Router()

class BookingState(StatesGroup):
    waiting_for_people = State()
    waiting_for_date = State()
    waiting_for_time = State()
    waiting_for_contact = State()

@router.callback_query(F.data == "booking")
async def booking_start(callback: types.CallbackQuery, state: FSMContext):
    await state.clear()
    await callback.message.answer("üë• –°–∫–æ–ª—å–∫–æ —á–µ–ª–æ–≤–µ–∫ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å?")
    await state.set_state(BookingState.waiting_for_people)

@router.message(BookingState.waiting_for_people)
async def booking_people(message: types.Message, state: FSMContext):
    if not message.text.isdigit():
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.")
        return
    await state.update_data(people=message.text)
    await message.answer("üìÖ –ù–∞ –∫–∞–∫—É—é –¥–∞—Ç—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å? (–Ω–∞–ø—Ä–∏–º–µ—Ä: 2024-06-01)")
    await state.set_state(BookingState.waiting_for_date)

@router.message(BookingState.waiting_for_date)
async def booking_date(message: types.Message, state: FSMContext):
    await state.update_data(date=message.text)
    await message.answer("üïì –í–æ —Å–∫–æ–ª—å–∫–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–π—Ç–∏? (–Ω–∞–ø—Ä–∏–º–µ—Ä: 18:30)")
    await state.set_state(BookingState.waiting_for_time)

@router.message(BookingState.waiting_for_time)
async def booking_time(message: types.Message, state: FSMContext):
    await state.update_data(time=message.text)
    await message.answer("üì± –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.")
    await state.set_state(BookingState.waiting_for_contact)

@router.message(BookingState.waiting_for_contact)
async def booking_contact(message: types.Message, state: FSMContext):
    await state.update_data(contact=message.text)
    data = await state.get_data()

    user_id = message.from_user.id
    username = message.from_user.username or message.from_user.full_name

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ Google –¢–∞–±–ª–∏—Ü—É
    save_full_booking(
    user_id=user_id,
    username=username,
    order_type="–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ",
    cart_items=[],
    total_amount=0,
    booking_info={
        "count": data.get("people"),
        "date": data.get("date"),
        "time": data.get("time"),
        "phone": data.get("contact")
    }
)
    # –ö–Ω–æ–ø–∫–∏ –º–µ–Ω—é –∏ WhatsApp
    builder = InlineKeyboardBuilder()
    builder.row(
        types.InlineKeyboardButton(text="üçΩ –ü–µ—Ä–µ–π—Ç–∏ –∫ –º–µ–Ω—é", callback_data="menu"),
        types.InlineKeyboardButton(text="üí¨ –ù–∞–ø–∏—Å–∞—Ç—å –≤ WhatsApp", url="https://wa.me/7086068647")
    )

    # –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–∞–Ω–Ω—ã–º–∏
    text = (
        "‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ:\n\n"
        f"üë• –ö–æ–ª-–≤–æ —á–µ–ª–æ–≤–µ–∫: {data.get('people')}\n"
        f"üìÖ –î–∞—Ç–∞: {data.get('date')}\n"
        f"üïì –í—Ä–µ–º—è: {data.get('time')}\n"
        f"üì± –¢–µ–ª–µ—Ñ–æ–Ω: {data.get('contact')}\n\n"
        "–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –±–ª—é–¥–∞ –∏–∑ –º–µ–Ω—é –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏:"
    )

    await message.answer(text, reply_markup=builder.as_markup())